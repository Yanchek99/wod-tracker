version: 2
jobs:
  build:
    environment:
      CC_TEST_REPORTER_ID: YOUR_REPO_CC_TEST_REPORTER_ID
    parallelism: 3
    docker:
      - image: circleci/ruby:2.5-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: test
          RAILS_ENV: test
      - image: circleci/postgres:10.1-alpine
        environment:
          POSTGRES_USER: test
          POSTGRES_DB: wodtracker_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - wod-tracker-bundle-v2-{{ checksum "Gemfile.lock" }}
            - wod-tracker-bundle-v2-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: wod-tracker-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - wod-tracker-yarn-{{ checksum "yarn.lock" }}
            - wod-tracker-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: wod-tracker-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Run tests
          command: |
            ./cc-test-reporter before-build
            bundle exec rails test
            ./cc-test-reporter after-build
            
      # - run:
      #     command: bundle exec rails test
      #     when: always

      - store_test_results:
          path: test/reports
