name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  verify:
    name: Build
    runs-on: ubuntu-latest
    env: 
      CC_TEST_REPORTER_ID: 325d29d9ac0a59974a66c6deb68b755a1466b8e00b2ac483ee992864513dfa36
      
    services:
      postgres:
        image: postgres:10.1
        ports: 
          - 5432:5432
        env:
          POSTGRES_USER: runner
          POSTGRES_DB: wodtracker_test
          POSTGRES_PASSWORD: ""
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v1
      
      - name: Install PostgreSQL client
        run: sudo apt-get -yqq install libpq-dev
      
      # Install Ruby
      - uses: actions/cache@v1.0.3
        id: ruby-cache
        with:
          path: ~/local/rubies/2.6.5
          key: ruby-2.6.5
          restore-keys: ruby-2.6.5
      - uses: clupprich/ruby-build-action@v1.3.0
        id: ruby
        with: 
          ruby-version: 2.6.5
          cache-available: ${{ steps.ruby-cache.outputs.cache-hit == 'true' }}
      
      # Install NodeJs
      - uses: actions/setup-node@v1.1.0
        with:
          version: 12.13.1
          
      - uses: actions/cache@v1.0.3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gem-
     
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1.0.3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          yarn install
      
      - name: Setup test database
        env:
          RAILS_ENV: test
        run: bin/rails db:schema:load --trace

      - name: Setup Code Climate test-reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
      
      - name: Run Tests
        run: |
          ./cc-test-reporter before-build
          bundle exec rails test
          ./cc-test-reporter after-build -t simplecov

