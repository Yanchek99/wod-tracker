= simple_form_for [@workout, @log], wrapper: :input_group  do |f|
  = f.error_notification
  .row.mt-3
    .col
      h1
        = @workout.name
        | &nbsp;
        = link_to workout_path(@workout)
          i.fas.fa-external-link-alt
  .row.col
    p = workout_objective @workout
  .form-inputs.row
    .col
      = f.input :measurement_value, as: :group, prepend: (@workout.measurement.unit.pluralize if @workout.measurement), label: false, class: 'form-control', data: { auto_calc_reps: @workout.measurement.round? }
      h2.mt-3 Exercise Recordings
      = f.simple_fields_for :movement_logs do |ml_form|
        .card.mb-3
          .card-body
            .row
              .col.mt-2.mt-md-auto
                = ml_form.input :reps, as: :group, append: 'reps', class: 'form-control reps-field', data: { original_reps: ml_form.object.reps }, label: false
              .col.mt-2.mt-md-auto
                = ml_form.input :movement_id, collection: Movement.all.order(:name), prompt: 'Select Movement', label: false
              - unless ml_form.object.measurement.rep?
                .col-12.col-sm-6.mt-2.mt-md-auto
                  = ml_form.input :measurement_value, as: :group, prepend: ml_form.object.measurement.name, append: ml_form.object.measurement.unit.pluralize, label: false, class: 'form-control'
        = ml_form.input_field :measurement_id, as: :hidden
  .form-actions
    = f.button :submit, 'Save', class: 'btn btn-block btn-primary'
